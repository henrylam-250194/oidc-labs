name: AWS Auth example workflow
on:
  workflow_dispatch:
    inputs:
      delete_infra:
        description: 'Delete Infra'
        required: true
        default: "no"
env:
  AWS_REGION : "ap-southeast-1"
permissions:
  id-token: write
  contents: read
jobs:
  set-up:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.ENV }}
    steps:
      - name: set env
        id: set-env
        run: | 
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "ENV=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" =~ refs/heads/release/.* ]]; then
            echo "ENV=qa" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" =~ refs/tags/v.* ]]; then
            if [[ "${{ github.actor }}" == "henrylam-250194" ]]; then
              echo "ENV=prod" >> $GITHUB_OUTPUT
            else
              echo "ENV=dev" >> $GITHUB_OUTPUT
            fi
          fi
      - name: print
        run: echo ${{ steps.set-env.outputs.ENV }}
  
  deploy-infra:
    needs: set-up
    runs-on: ubuntu-latest
    environment: ${{ needs.set-up.outputs.env }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::509403202865:role/oidc-test
          role-session-name: GitHubActionsSession
          aws-region: ${{ env.AWS_REGION }}
      # Upload a file to AWS s3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1
      - name: Initialize Terraform
        run: |
          terraform init
        working-directory: ./aws-infra/env/dev
      - name: Plan Terraform
        run: |
          terraform plan
        working-directory: ./aws-infra/env/dev
      # - name: Apply Terraform
      #   run: |
      #     terraform apply -auto-approve
      #   working-directory: ./aws-infra/env/dev
      # - name: delete infra
      #   if: ${{ inputs.variable_input == 'yes' }}
      #   run: |
      #     terraform destroy -auto-approve
      #   working-directory: ./aws-infra/env/dev